{"version":3,"sources":["pages/Home.js","pages/Login.js","pages/Register.js","pages/JobScheduler.js","App.js","reportWebVitals.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","toolbarTitle","flexGrow","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","footer","slotContent","textAlign","Home","history","useHistory","useState","message","setMessage","window","localStorage","getItem","push","classes","alert","setAlert","states","setStates","districts","setDistricts","sessions","setSessions","stateId","setState","districtId","setDistrict","pincode","setPincode","age","setAge","email","setEmail","freeze","setFreeze","useEffect","fetchStates","fetchUserData","a","fetch","res","json","resp","ok","data","subscribed","fetchDistricts","subscribe","parseInt","undefined","method","headers","body","JSON","stringify","unsubscribe","fetchSessions","Fragment","CssBaseline","AppBar","position","Toolbar","noWrap","className","Chip","label","Container","maxWidth","component","gutterBottom","paragraph","Grid","container","justify","item","FormControlLabel","control","Switch","checked","onChange","event","setTimeout","name","disabled","xs","sm","md","Card","CardMedia","image","title","CardContent","FormControl","InputLabel","id","Select","labelId","value","target","map","state","MenuItem","state_id","state_name","district","district_id","district_name","TextField","CardActions","Button","size","onClick","length","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","row","scope","address","vaccine","available_capacity","min_age_limit","date","session_id","root","backgroundImage","backgroundRepeat","type","grey","backgroundSize","backgroundPosition","margin","alignItems","avatar","secondary","main","form","width","submit","Login","password","setPassword","handleSubmit","preventDefault","setItem","elevation","square","Avatar","noValidate","onSubmit","required","fullWidth","autoComplete","autoFocus","e","Box","mt","Register","adminPassword","setAdminPassword","Authorization","JobScheduler","switchOnJob","switchOffJob","pwd","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.820947cc.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport {\r\n  InputLabel,\r\n  Switch,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  TextField,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Paper,\r\n  FormControlLabel,\r\n  Chip,\r\n} from \"@material-ui/core/\";\r\nimport \"./Home.css\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        findmeslot\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbarTitle: {\r\n    flexGrow: 1,\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n    padding: \"5% 10%\",\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n  slotContent: {\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function Home() {\r\n  let history = useHistory();\r\n  let [message, setMessage] = useState(\"\");\r\n\r\n  if (\r\n    window.localStorage.getItem(\"isAuthenticated\")\r\n      ? window.localStorage.getItem(\"isAuthenticated\") === \"false\"\r\n      : true\r\n  ) {\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  const [alert, setAlert] = useState(false);\r\n  const [states, setStates] = useState([]);\r\n  const [districts, setDistricts] = useState([]);\r\n  const [sessions, setSessions] = useState([]);\r\n  const [stateId, setState] = useState(\"\");\r\n  const [districtId, setDistrict] = useState(\"\");\r\n  const [pincode, setPincode] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [freeze, setFreeze] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchStates();\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      let res = await fetch(\"/api/getDataForUI/subscriptionInfo\");\r\n      let resp = await res.json();\r\n      if (!res.ok) {\r\n        setMessage(resp.message);\r\n        return;\r\n      }\r\n      setMessage(\"\");\r\n      let { email, stateId, districtId, pincode, age, subscribed } = resp.data;\r\n      setEmail(email);\r\n      if (stateId) {\r\n        fetchDistricts(stateId);\r\n      }\r\n      setDistrict(districtId || \"\");\r\n      setState(stateId || \"\");\r\n      setPincode(pincode || \"\");\r\n      setAge(age || \"\");\r\n      setAlert(subscribed);\r\n    } catch (oError) {\r\n      setMessage(oError.message);\r\n    }\r\n  };\r\n\r\n  const fetchStates = async () => {\r\n    try {\r\n      let res = await fetch(\"/api/getDataForUI/states\");\r\n      let resp = await res.json();\r\n      if (!res.ok) {\r\n        setMessage(resp.message);\r\n        history.push(\"/login\");\r\n        return;\r\n      }\r\n      setMessage(\"\");\r\n      setStates(resp.data.states);\r\n    } catch (oError) {\r\n      setMessage(oError.message);\r\n    }\r\n  };\r\n\r\n  const handleChangeAlert = (event) => {\r\n    setFreeze(true);\r\n    if (!alert) {\r\n      subscribe();\r\n    } else {\r\n      unsubscribe();\r\n    }\r\n    setTimeout(() => {\r\n      setFreeze(false);\r\n    }, 1000 * 10);\r\n  };\r\n\r\n  const subscribe = async () => {\r\n    try {\r\n      let data = {\r\n        email,\r\n        districtId,\r\n        stateId,\r\n        pincode: pincode ? parseInt(pincode) : undefined,\r\n        age: age ? parseInt(age) : undefined,\r\n      };\r\n      let res = await fetch(`/api/user/subscribe`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n      let resp = await res.json();\r\n      if (!res.ok) {\r\n        setMessage(resp.message);\r\n        return;\r\n      }\r\n      setMessage(\"\");\r\n      setAlert(true);\r\n    } catch (oError) {\r\n      setMessage(oError.message);\r\n    }\r\n  };\r\n\r\n  const unsubscribe = async () => {\r\n    try {\r\n      let data = {\r\n        email,\r\n      };\r\n      let res = await fetch(`/api/user/unsubscribe`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n      let resp = await res.json();\r\n      if (!res.ok) {\r\n        setMessage(resp.message);\r\n        return;\r\n      }\r\n      setMessage(\"\");\r\n      setAlert(false);\r\n    } catch (oError) {\r\n      setMessage(oError.message);\r\n    }\r\n  };\r\n\r\n  const handleChangeState = (event) => {\r\n    let stateId = event.target.value;\r\n    setState(stateId);\r\n    fetchDistricts(stateId);\r\n  };\r\n\r\n  const fetchDistricts = async (stateId) => {\r\n    try {\r\n      let res = await fetch(`/api/getDataForUI/district?stateId=${stateId}`);\r\n      let resp = await res.json();\r\n      if (!res.ok) {\r\n        setMessage(resp.message);\r\n        return;\r\n      }\r\n      setMessage(\"\");\r\n      setDistricts(resp.data.districts);\r\n    } catch (oError) {\r\n      setMessage(oError.message);\r\n    }\r\n  };\r\n\r\n  const handleChangeDistrict = (event) => {\r\n    let districtId = event.target.value;\r\n    setDistrict(districtId);\r\n  };\r\n\r\n  const handleChangePincode = (event) => {\r\n    let pincode = event.target.value;\r\n    setPincode(pincode);\r\n  };\r\n\r\n  const handleChangeAge = (event) => {\r\n    let age = event.target.value;\r\n    setAge(age);\r\n  };\r\n\r\n  const fetchSessions = async () => {\r\n    try {\r\n      let res = await fetch(\r\n        `/api/session?districtId=${districtId}&age=${age}&pincode=${pincode}`\r\n      );\r\n      let resp = await res.json();\r\n      if (!res.ok) {\r\n        setMessage(resp.message);\r\n        setSessions([]);\r\n        return;\r\n      }\r\n      setMessage(\"\");\r\n      setSessions(resp.data);\r\n    } catch (oError) {\r\n      setMessage(oError.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          {/* <CameraIcon className={classes.icon} /> */}\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            Find Me Slot\r\n          </Typography>\r\n          <Chip label={email} color=\"primary\" />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"lg\">\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h3\"\r\n              align=\"center\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n            >\r\n              Find next available vaccine slot\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h6\"\r\n              align=\"center\"\r\n              color=\"textSecondary\"\r\n              paragraph\r\n            >\r\n              To get alerts at your email, switch on the alert.\r\n            </Typography>\r\n            <div className={classes.heroButtons}>\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={alert}\r\n                        onChange={handleChangeAlert}\r\n                        name=\"alert\"\r\n                        color=\"primary\"\r\n                        disabled={freeze}\r\n                      />\r\n                    }\r\n                    label=\"Alert\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Container className={classes.cardGrid} maxWidth=\"lg\">\r\n          {/* {message && <Chip label={message} />} */}\r\n          <Grid container spacing={2} justify=\"center\">\r\n            <Grid item xs={12} sm={12} md={4}>\r\n              <Card className={classes.card}>\r\n                <CardMedia\r\n                  className={classes.cardMedia}\r\n                  image=\"https://images.unsplash.com/photo-1605289982774-9a6fef564df8?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1400&q=80\"\r\n                  title=\"Image title\"\r\n                />\r\n                <CardContent className={classes.cardContent}>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    Vaccine slot\r\n                  </Typography>\r\n                  <FormControl variant=\"outlined\" className=\"formControl\">\r\n                    <InputLabel id=\"state-label\">State</InputLabel>\r\n                    <Select\r\n                      labelId=\"state-label\"\r\n                      id=\"state-select\"\r\n                      value={stateId}\r\n                      onChange={handleChangeState}\r\n                      label=\"State\"\r\n                    >\r\n                      {states &&\r\n                        states.map((state) => (\r\n                          <MenuItem key={state.state_id} value={state.state_id}>\r\n                            {state.state_name}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <FormControl variant=\"outlined\" className=\"formControl\">\r\n                    <InputLabel id=\"district-label\">District</InputLabel>\r\n                    <Select\r\n                      labelId=\"district-label\"\r\n                      id=\"district-select\"\r\n                      value={districtId}\r\n                      onChange={handleChangeDistrict}\r\n                      label=\"District\"\r\n                    >\r\n                      {districts &&\r\n                        districts.map((district) => (\r\n                          <MenuItem\r\n                            key={district.district_id}\r\n                            value={district.district_id}\r\n                          >\r\n                            {district.district_name}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl variant=\"outlined\" className=\"formControl\">\r\n                    <TextField\r\n                      id=\"pincode\"\r\n                      label=\"Pincode\"\r\n                      variant=\"outlined\"\r\n                      value={pincode}\r\n                      onChange={handleChangePincode}\r\n                    />\r\n                  </FormControl>\r\n                  <FormControl variant=\"outlined\" className=\"formControl\">\r\n                    <TextField\r\n                      id=\"age\"\r\n                      label=\"Age\"\r\n                      variant=\"outlined\"\r\n                      value={age}\r\n                      onChange={handleChangeAge}\r\n                    />\r\n                  </FormControl>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\" color=\"primary\" onClick={fetchSessions}>\r\n                    Find Slots\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} justify=\"center\">\r\n            <Grid item xs={12} sm={12} md={12} className={classes.slotContent}>\r\n              {message && <Chip label={message} color=\"secondary\" />}\r\n              {sessions.length > 0 && (\r\n                <TableContainer component={Paper}>\r\n                  <Table className=\"table\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Center Name</TableCell>\r\n                        <TableCell align=\"right\">Center Address</TableCell>\r\n                        <TableCell align=\"right\">Pincode</TableCell>\r\n                        <TableCell align=\"right\">Vaccine Name</TableCell>\r\n                        <TableCell align=\"right\">Available Vaccines</TableCell>\r\n                        <TableCell align=\"right\">Age</TableCell>\r\n                        <TableCell align=\"right\">Date</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {sessions &&\r\n                        sessions.map((row) => (\r\n                          <TableRow key={row.session_id}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.name}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{row.address}</TableCell>\r\n                            <TableCell align=\"right\">{row.pincode}</TableCell>\r\n                            <TableCell align=\"right\">{row.vaccine}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                              {row.available_capacity}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                              {row.min_age_limit}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{row.date}</TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n      {/* Footer */}\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Save India\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        >\r\n          Lets get vaccinated!\r\n        </Typography>\r\n        <Copyright />\r\n      </footer>\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n// import Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        findmeslot\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage:\r\n      \"url(https://images.unsplash.com/photo-1585559604959-6388fe69c92a?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1500&q=80)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  let [email, setEmail] = useState(\"\");\r\n  let [password, setPassword] = useState(\"\");\r\n  let [message, setMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const data = { email, password };\r\n\r\n      let res = await fetch(\"/api/user/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n      let resp = await res.json();\r\n      if (!res.ok) {\r\n        setMessage(resp.message);\r\n        return;\r\n      }\r\n\r\n      window.localStorage.setItem(\"isAuthenticated\", true);\r\n      history.push(\"/\");\r\n    } catch (oError) {\r\n      window.localStorage.setItem(\"isAuthenticated\", false);\r\n      setMessage(oError.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n          {message && <Chip label={message} />}\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n// import Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        findmeslot\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage:\r\n      \"url(https://images.unsplash.com/photo-1585635628839-39621c7033ee?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Register() {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  let [message, setMessage] = useState(\"\");\r\n\r\n  let [email, setEmail] = useState(\"\");\r\n  let [password, setPassword] = useState(\"\");\r\n  let [adminPassword, setAdminPassword] = useState(\"\");\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const data = { email, password };\r\n\r\n      let res = await fetch(\"/api/user/create\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${adminPassword}`,\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n      let resp = await res.json();\r\n      if (!res.ok) {\r\n        setMessage(resp.message);\r\n        return;\r\n      }\r\n\r\n      history.push(\"/login\");\r\n    } catch (oError) {\r\n      setMessage(oError.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Register\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"admin password\"\r\n              label=\"Admin Password\"\r\n              type=\"password\"\r\n              id=\"adminPassword\"\r\n              autoComplete=\"current-password\"\r\n              value={adminPassword}\r\n              onChange={(e) => setAdminPassword(e.target.value)}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Register\r\n            </Button>\r\n            {message && <Chip label={message} />}\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport {\r\n  Switch,\r\n  FormControl,\r\n  TextField,\r\n  FormControlLabel,\r\n  Chip,\r\n} from \"@material-ui/core/\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        findmeslot\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbarTitle: {\r\n    flexGrow: 1,\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n    padding: \"5% 10%\",\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n  slotContent: {\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function JobScheduler() {\r\n  //   let history = useHistory();\r\n  let [message, setMessage] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [alert, setAlert] = useState(false);\r\n  const [freeze, setFreeze] = useState(false);\r\n\r\n  const [adminPassword, setAdminPassword] = useState(\"\");\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const handleChangeAlert = (event) => {\r\n    setFreeze(true);\r\n    if (!alert) {\r\n      switchOnJob();\r\n    } else {\r\n      switchOffJob();\r\n    }\r\n    setTimeout(() => {\r\n      setFreeze(false);\r\n    }, 1000 * 10);\r\n  };\r\n\r\n  const switchOnJob = async () => {\r\n    try {\r\n      let res = await fetch(\"/api/cronJob/start\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${adminPassword}`,\r\n        },\r\n        body: \"\",\r\n      });\r\n      let resp = await res.json();\r\n      if (!res.ok) {\r\n        setMessage(resp.message);\r\n        return;\r\n      }\r\n      setMessage(\"\");\r\n      setAlert(true);\r\n    } catch (oError) {\r\n      setMessage(oError.message);\r\n    }\r\n  };\r\n\r\n  const switchOffJob = async () => {\r\n    try {\r\n      let res = await fetch(\"/api/cronJob/stop\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${adminPassword}`,\r\n        },\r\n        body: \"\",\r\n      });\r\n      let resp = await res.json();\r\n      if (!res.ok) {\r\n        setMessage(resp.message);\r\n        return;\r\n      }\r\n      setMessage(\"\");\r\n      setAlert(false);\r\n    } catch (oError) {\r\n      setMessage(oError.message);\r\n    }\r\n  };\r\n\r\n  const handleChangeAdminPassword = (event) => {\r\n    let pwd = event.target.value;\r\n    setAdminPassword(pwd);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          {/* <CameraIcon className={classes.icon} /> */}\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            Find Me Slot\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"lg\">\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h3\"\r\n              align=\"center\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n            >\r\n              Job Scheduler\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h6\"\r\n              align=\"center\"\r\n              color=\"textSecondary\"\r\n              paragraph\r\n            >\r\n              You can switch on/off alert job here.\r\n            </Typography>\r\n            <div className={classes.heroButtons}>\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={alert}\r\n                        onChange={handleChangeAlert}\r\n                        name=\"alert\"\r\n                        color=\"primary\"\r\n                        disabled={freeze}\r\n                      />\r\n                    }\r\n                    label=\"Alert Job\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Container className={classes.cardGrid} maxWidth=\"lg\">\r\n          {/* {message && <Chip label={message} />} */}\r\n          <Grid container spacing={2} justify=\"center\">\r\n            <Grid item xs={12} sm={12} md={4}>\r\n              <Card className={classes.card}>\r\n                <CardContent className={classes.cardContent}>\r\n                  <FormControl variant=\"outlined\" className=\"formControl\">\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"admin password\"\r\n                      label=\"Admin Password\"\r\n                      type=\"password\"\r\n                      id=\"adminPassword\"\r\n                      autoComplete=\"current-password\"\r\n                      value={adminPassword}\r\n                      onChange={handleChangeAdminPassword}\r\n                    />\r\n                  </FormControl>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} justify=\"center\">\r\n            <Grid item xs={12} sm={12} md={12} className={classes.slotContent}>\r\n              {message && <Chip label={message} color=\"secondary\" />}\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n      {/* Footer */}\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Save India\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        >\r\n          Lets get vaccinated!\r\n        </Typography>\r\n        <Copyright />\r\n      </footer>\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport JobScheduler from \"./pages/JobScheduler\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <Route path=\"/jobscheduler\">\n          <JobScheduler />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}